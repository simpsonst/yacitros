// -*- c-basic-offset: 2; indent-tabs-mode: nil -*-

/*
    Yacitros: Yet Another C Interface to RISC OS
    Copyright (C) 2000-3,2005,2007,2012-13  Steven Simpson

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


    Author contact: <https://github.com/simpsonst>
*/

#ifndef Yacitros_wimp_types
#define Yacitros_wimp_types

#ifdef __cplusplus
extern "C" {
#endif


#include <stddef.h>
#include <stdint.h>

#include "../vdu/types.h"
#include "../mouse/types.h"
#include "../sprite/types.h"
#include "../font/types.h"
#include "../../arm/format.h"

#include "../../yacitros/common.h"

  typedef uint32_t wimp_keycode; /* key codes */
  Yacitros_deprecated(typedef wimp_keycode wimp_key_t);
  typedef uint32_t wimp_taskhandle; /* task handle */
  Yacitros_deprecated(typedef wimp_taskhandle wimp_task_t);
  typedef int32_t wimp_winhandle; /* window handle */
  Yacitros_deprecated(typedef wimp_winhandle wimp_win_t);
  typedef int32_t wimp_iconhandle; /* icon handle */
  Yacitros_deprecated(typedef wimp_iconhandle wimp_icon_t);
  typedef uint32_t wimp_eventtype; /* WIMP event type */
  Yacitros_deprecated(typedef wimp_eventtype wimp_eventtype_t);
  typedef uint32_t wimp_eventmask;
  Yacitros_deprecated(typedef wimp_eventmask wimp_eventmask_t);
  typedef uint32_t wimp_buttontype; /* window/icon button types */
  Yacitros_deprecated(typedef wimp_buttontype wimp_buttontype_t);

  /* Icon flags */
  typedef union {
    uint32_t word;
    struct {
      unsigned text : 1, sprite : 1, border : 1, hcentre : 1, vcentre : 1;
      unsigned filled : 1, aafont : 1, needs_help : 1, indirected : 1;
      unsigned rjustify : 1, allow_adjust : 1, half_size : 1;
      unsigned button_type : 4;
      unsigned esg : 5, selected : 1, disabled : 1, deleted : 1;
      unsigned fgcol : 4, bgcol : 4;
    } bits_colour;
    struct {
      unsigned text : 1, sprite : 1, border : 1, hcentre : 1, vcentre : 1;
      unsigned filled : 1, aafont : 1, needs_help : 1, indirected : 1;
      unsigned rjustify : 1, allow_adjust : 1, half_size : 1;
      unsigned button_type : 4;
      unsigned esg : 5, selected : 1, disabled : 1, deleted : 1;
      unsigned font : 8;
    } bits_font;
    struct {
      unsigned text : 1, sprite : 1, border : 1, hcentre : 1, vcentre : 1;
      unsigned filled : 1, aafont : 1, needs_help : 1, indirected : 1;
      unsigned rjustify : 1, allow_adjust : 1, half_size : 1;
      unsigned button_type : 4;
      unsigned esg : 5, selected : 1, disabled : 1, deleted : 1;
    } bits;
  } wimp_iconflags;
  Yacitros_deprecated(typedef wimp_iconflags wimp_iconflags_t);

  /* 12-byte icon data */
  typedef union {
    char text[12];
    char spritename[12];
    struct {
      union {
        char *name;
        sprite_ptr ptr;
      } id;
      sprite_area spritearea;
      uint32_t length;
    } indirected_sprite;
    struct {
      char *buffer;
      char *val;
      uint32_t buflen;
    } indirected_text;
  } wimp_icondata;
  Yacitros_deprecated(typedef wimp_icondata wimp_icondata_t);

  typedef struct {
    vdu_box bounds;
    wimp_iconflags flags;
    wimp_icondata data;
  } wimp_iconstate;
  Yacitros_deprecated(typedef wimp_iconstate wimp_iconstate_t);

  /* generated by Wimp_RedrawWindow and Wimp_UpdateWindow */
  typedef struct {
    vdu_box visible;
    vdu_point scroll;
  } wimp_windim;
  Yacitros_deprecated(typedef wimp_windim wimp_windim_t);

  typedef struct {
    wimp_windim dim;
    vdu_box clip;
  } wimp_rectangle;
  Yacitros_deprecated(typedef wimp_rectangle wimp_rectangle_t);

  typedef struct {
    wimp_windim dim;
    wimp_winhandle behind;
  } wimp_winloc;
  Yacitros_deprecated(typedef wimp_winloc wimp_winloc_t);

  /* generated by WIMP event Open_Window_Request and passed to
     Wimp_OpenWindow */
  typedef struct {
    wimp_winhandle wh;
    wimp_winloc loc;
  } wimp_openwinreq;
  Yacitros_deprecated(typedef wimp_openwinreq wimp_openwinreq_t);

  /* generated by WIMP event Scroll_Request */
  typedef struct {
    wimp_openwinreq current;
    vdu_point change;
  } wimp_scrollreq;
  Yacitros_deprecated(typedef wimp_scrollreq wimp_scrollreq_t);

  typedef union {
    uint32_t word;
    struct {
      unsigned height : 16, colour : 8, vdu5 : 1, hidden : 1;
      unsigned use_bits : 1, untranslate : 1;
    } fields;
  } wimp_caretflags;
  Yacitros_deprecated(typedef wimp_caretflags wimp_caretflags_t);

  typedef struct {
    vdu_point offset;
    wimp_caretflags flags;
    uint32_t index;
  } wimp_caretpos;
  Yacitros_deprecated(typedef wimp_caretpos wimp_caret_t);

  typedef struct {
    wimp_winhandle wh;
    wimp_iconhandle ih;
    wimp_caretpos pos;
  } wimp_caretevent;
  Yacitros_deprecated(typedef wimp_caretevent wimp_caretevent_t);

  typedef struct {
    wimp_winhandle wh;
    wimp_iconhandle ih;
    wimp_caretpos caret;
    wimp_keycode key;
  } wimp_keypressedevent;
  Yacitros_deprecated(typedef wimp_keypressedevent wimp_keypressedevent_t);

  typedef union {
    uint32_t word;
    struct {
      unsigned title : 1, moveable : 1, vscroll : 1, hscroll : 1;
      unsigned no_help : 1, is_pane : 1, off_screen : 1;
      unsigned no_back_or_close : 1, scroll_events : 1, no_auto : 1;
      unsigned use_gcol : 1, backdrop : 1, hot_keys : 1, reserved1 : 3;
      unsigned is_open : 1, isnot_covered : 1, is_full : 1;
      unsigned toggle_opened : 1, has_focus : 1, reserved2 : 3;
      unsigned has_back : 1, has_close : 1, has_title : 1, has_toggle : 1;
      unsigned has_vscroll : 1, has_adjust : 1, has_hscroll : 1;
      unsigned use_new_bits : 1;
    } bits;
  } wimp_winflags;
  Yacitros_deprecated(typedef wimp_winflags wimp_winflags_t);

  typedef struct {
    mouse_state mouse;
    wimp_winhandle wh;
    wimp_iconhandle ih;
  } wimp_mouseevent;
  Yacitros_deprecated(typedef wimp_mouseevent wimp_mouseevent_t);

  typedef struct {
    wimp_winloc loc;
    wimp_winflags flags;
  } wimp_winstate;
  Yacitros_deprecated(typedef wimp_winstate wimp_winstate_t);

  typedef struct {
    wimp_winstate state;
    unsigned title_fg : 8, title_bg : 8, work_fg : 8, work_bg : 8;
    unsigned scroll_outer : 8, scroll_inner : 8, focus_col : 8;
    unsigned reserved : 8;
    vdu_box workarea;
    wimp_iconflags title_flags, workarea_flags;
    sprite_area sprites;
    unsigned min_width : 16, min_height : 16;
    wimp_icondata title_data;
    uint32_t icons;
  } wimp_wininfo;
  Yacitros_deprecated(typedef wimp_wininfo wimp_wininfo_t);

#define wimp_winicons(W) ((wimp_iconstate *) (1 + (wimp_wininfo *) (W)))
#define wimp_winsize(N) ((size_t) (sizeof(wimp_wininfo) \
                         + (N) * sizeof(wimp_iconstate)))

  typedef union {
    uint32_t word;
    struct {
      unsigned ok : 1, cancel : 1, hicancel : 1, noprompt : 1, noprefix : 1;
      unsigned immediate : 1, select : 1, reserved : 25;
    } bits;
  } wimp_errflags;
  Yacitros_deprecated(typedef wimp_errflags wimp_errflags_t);

  typedef enum {
    wimp_errrsp_NOCLICK = 0,
    wimp_errrsp_OK = 1,
    wimp_errrsp_CANCEL = 2
  } wimp_errrsp;

#define wimp_COMMA ,
  Yacitros_deprecated(enum {
    wimp_err_NOCLICK = wimp_errrsp_NOCLICK wimp_COMMA
    wimp_err_OK = wimp_errrsp_OK wimp_COMMA
    wimp_err_CANCEL = wimp_errrsp_CANCEL
  });
  Yacitros_deprecated(typedef wimp_errrsp wimp_err_t);

  /* REMOVE THIS */
  typedef unsigned char wimp_gcol;
  Yacitros_deprecated(typedef wimp_gcol wimp_gcol_t);

  /* Menu structures */
  typedef struct {
    wimp_icondata title;
    uint8_t title_fg, title_bg, work_fg, work_bg;
    uint32_t item_width, item_height, item_gap;
  } wimp_menuhdr;
  Yacitros_deprecated(typedef wimp_menuhdr wimp_menuhdr_t);
#define wimp_menu_CLOSE ((wimp_menuhdr *) -1)

  typedef signed long wimp_menuchoice;
  Yacitros_deprecated(typedef wimp_menuchoice wimp_menuchoice_t);

  typedef union {
    struct {
      unsigned tick : 1, dotted : 1, writeable : 1, message : 1,
        unused1 : 3, last : 1, indir_title : 1, unused2 : 23;
    } bits;
    uint32_t word;
  } wimp_menuflags;
  Yacitros_deprecated(typedef wimp_menuflags wimp_menuflags_t);

  typedef struct {
    wimp_menuflags menu_flags;
    union {
      wimp_menuhdr *menu;
      wimp_winhandle wh;
      uint32_t word;
    } sub;
    wimp_iconflags flags;
    wimp_icondata data;
  } wimp_menuitem;
  Yacitros_deprecated(typedef wimp_menuitem wimp_menuitem_t);

#define wimp_NOSUBMENU ((uint32_t) -1)

#define wimp_menuitems(H) ((wimp_menuitem *) (1 + (wimp_menuhdr *) (H)))
#define wimp_menusize(N) ((size_t) (sizeof(wimp_menuhdr) + \
                                    (N) * sizeof(wimp_menuitem)))

  /* Drag boxes */
  typedef enum {
    wimp_drag_MOVE_WIND = 1,
    wimp_drag_SIZE_WIND = 2,
    wimp_drag_DRAG_HBAR = 3,
    wimp_drag_DRAG_VBAR = 4,
    wimp_drag_USER_FIXED = 5,
    wimp_drag_USER_RUBBER = 6,
    wimp_drag_USER_HIDDEN = 7
  } wimp_dragtype;
  Yacitros_deprecated(typedef wimp_dragtype wimp_drag_t);

  typedef struct {
    wimp_winhandle wh;
    wimp_dragtype type;
    vdu_box startpos;
    vdu_box parentbox;
    void *r12;
    const arm_inst *draw, *remove, *move;
  } wimp_dragspec;
  Yacitros_deprecated(typedef wimp_dragspec wimp_dragstart_t);

  /* User messages */
  typedef uint32_t wimp_msgref, wimp_msgtype;
  Yacitros_deprecated(typedef wimp_msgref wimp_msgref_t);
  Yacitros_deprecated(typedef wimp_msgtype wimp_msgtype_t);

#define wimp_msgref_NONE ((wimp_msgref) 0)

  typedef struct {
    uint32_t size;
    wimp_taskhandle sender;
    wimp_msgref my_ref, your_ref;
    wimp_msgtype action;
  } wimp_msghdr;
  Yacitros_deprecated(typedef wimp_msghdr wimp_msghdr_t);

#define wimp_msgdata(H) ((void *) (1 + (wimp_msghdr *) (H)))

  typedef int wimp_colplane;
  Yacitros_deprecated(typedef wimp_colplane wimp_colplane_t);
#define wimp_FORE ((wimp_colplane) 0)
#define wimp_BACK ((wimp_colplane) 1)
  enum { wimp_col_WHITE = 0, wimp_col_BLACK = 7 };

#ifdef __cplusplus
}
#endif

#endif
